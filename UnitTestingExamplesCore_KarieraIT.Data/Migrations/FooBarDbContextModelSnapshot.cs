// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnitTestingExamplesCore_KarieraIT.Data;

namespace UnitTestingExamplesCore_KarieraIT.Data.Migrations
{
    [DbContext(typeof(FooBarDbContext))]
    partial class FooBarDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UnitTestingExamplesCore_KarieraIT.Data.Entities.Bar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FooId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FooId");

                    b.ToTable("Bars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FooId = 1,
                            Name = "Bar1"
                        },
                        new
                        {
                            Id = 2,
                            FooId = 1,
                            Name = "Bar2"
                        },
                        new
                        {
                            Id = 3,
                            FooId = 1,
                            Name = "Bar3"
                        },
                        new
                        {
                            Id = 4,
                            FooId = 1,
                            Name = "Bar4"
                        },
                        new
                        {
                            Id = 5,
                            FooId = 2,
                            Name = "Bar5"
                        },
                        new
                        {
                            Id = 6,
                            FooId = 2,
                            Name = "Bar6"
                        },
                        new
                        {
                            Id = 7,
                            FooId = 2,
                            Name = "Bar7"
                        },
                        new
                        {
                            Id = 8,
                            FooId = 3,
                            Name = "Bar8"
                        },
                        new
                        {
                            Id = 9,
                            FooId = 3,
                            Name = "Bar9"
                        },
                        new
                        {
                            Id = 10,
                            FooId = 4,
                            Name = "Bar10"
                        });
                });

            modelBuilder.Entity("UnitTestingExamplesCore_KarieraIT.Data.Entities.Foo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Foos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Foo1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Foo2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Foo3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Foo4"
                        });
                });

            modelBuilder.Entity("UnitTestingExamplesCore_KarieraIT.Data.Entities.Bar", b =>
                {
                    b.HasOne("UnitTestingExamplesCore_KarieraIT.Data.Entities.Foo", "Foo")
                        .WithMany("Bars")
                        .HasForeignKey("FooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
